[{"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/index.js":"1","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/App.js":"2","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/reportWebVitals.js":"3","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/services/cartoon-service.js":"4","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/config/index.js":"5","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/components/imageCartoon.js":"6"},{"size":520,"mtime":1613434179462,"results":"7","hashOfConfig":"8"},{"size":249,"mtime":1613436832950,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612231242858,"results":"10","hashOfConfig":"8"},{"size":642,"mtime":1613433950726,"results":"11","hashOfConfig":"8"},{"size":132,"mtime":1613433942750,"results":"12","hashOfConfig":"8"},{"size":3633,"mtime":1613440120861,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"w0rykf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/index.js",[],["30","31"],"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/App.js",["32"],"import logo from './images/logo.svg';\nimport './css/App.css';\nimport ImageCartoon from \"./components/imageCartoon.js\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <ImageCartoon />\n      \n    </div>\n  );\n}\n\nexport default App;\n","/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/reportWebVitals.js",[],"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/services/cartoon-service.js",[],"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/config/index.js",[],["33","34"],"/home/stevramos/Documents/personal_projects/xgan/avatar-image-generator-app/src/components/imageCartoon.js",["35","36"],"import React, {useState} from 'react';\nimport Dropzone from 'react-dropzone-uploader';\nimport cartoonService from \"../services/cartoon-service\";\nimport '../css/App.css';\nimport ReactGA from \"react-ga\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Button from '@material-ui/core/Button';\nconst handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\nfunction ImageCartoon() {\n    const [cartoon, setCartoon] = useState({file: 'https://static.thenounproject.com/png/574704-200.png'});\n    const [img, setImg] = useState(\"\");\n\n    const handleSubmit = async (files, allFiles) => {\n        const uniqueFile = files[0].file; // forgive me father\n      ReactGA.event({\n        category: 'Usuario',\n        action: 'Imagen Enviada'\n      }); \n    \n        try {\n          const res = await cartoonService.sendImageToConvert(uniqueFile);\n\n          const { data } = await cartoonService.getCartoonImage(res.data.filename_cartoon);\n          setCartoon({ file: data });\n    \n        } catch (e) {\n          console.log('error enviando imagen para convertir a cartoon');\n          console.error(e);\n        }\n      }    \n\n    const handleOnClick = ()=>{\n      console.log('Blob!', cartoon.file)\n      const imgURL = window.URL.createObjectURL(cartoon.file);\n    }\n\n      return (\n        <div className=\"containerDropzone\">\n          <Dropzone\n            onChangeStatus={handleChangeStatus}\n            onSubmit={handleSubmit}\n            accept=\".jpg,.jpeg,.png\"\n            styles={{\n              dropzone: { width: '50%', height: 200, overflow: 'hidden', backgroundColor: '#ECECEC' },\n              inputLabel: { color: '#707070' },\n              submitButton: { backgroundColor: '#29985E', borderRadius: '0px' },\n              dropzoneReject: { borderColor: '#F2DEDE', backgroundColor: '#F2DEDE' },\n              dropzoneActive: { borderColor: '#29985E' },\n            }}\n            inputContent={(\n              <Grid key=\"1\" container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                <Grid item xs={3}>\n                  <PublishIcon style={{ fontSize: 80, color: '#000000' }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"h6\"> Drag or select a face image </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography variant=\"body2\">Allowed formats (.jpg, .jpeg, .png)</Typography>\n                </Grid>\n              </Grid>\n            )}\n            submitButtonContent=\"Convert to cartoon\"\n            maxFiles={1}\n          />\n          <Grid container spacing={1} alignItems=\"center\" justify=\"center\">\n            <Grid item xs={3} >\n              <img src={typeof cartoon.file === 'string' ? cartoon.file : ()=>{\n                const imgName = URL.createObjectURL(cartoon.file)  ;\n                setImg(imgName);\n                console.log(\"imgName\", imgName)\n                return imgName;\n              }\n              }\n              alt=\"cartoon\"\n              style={{\n                height: \"200px\",\n                width:\"200px\"\n              }}\n              // className=\"cartoonImage\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <div download={cartoon + \".jpg\"} href={img}>\n                <Button variant=\"contained\" color=\"primary\" >\n                  Download\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n\n        </div>\n      );\n\n}\n\nexport default ImageCartoon;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"37","replacedBy":"45"},{"ruleId":"39","replacedBy":"46"},{"ruleId":"41","severity":1,"message":"47","line":35,"column":11,"nodeType":"43","messageId":"44","endLine":35,"endColumn":24},{"ruleId":"41","severity":1,"message":"48","line":37,"column":13,"nodeType":"43","messageId":"44","endLine":37,"endColumn":19},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["49"],["50"],"'handleOnClick' is assigned a value but never used.","'imgURL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]